{{ if .Values.global.devEnv.enabled }}
{{- $name := .Values.global.devEnv.ip | required ".Values.global.devEnv.ip is required." -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: esthesis-routes-dev-audit
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: esthesis-routes-dev-audit
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    spec:
      restartPolicy: Never
      containers:
        - name: post-install-job-dev-routes-audit
          image: "wbitt/network-multitool"
          command:
            - /bin/sh
            - -c
            - |
              while ! nc -z esthesis-apisix-admin 9180; do sleep 1; done && \
              curl -s http://esthesis-apisix-admin:9180/apisix/admin/routes/dev-srv-audit-route -H "X-API-KEY: esthesis-admin" -X PUT -i -d '
              {
              "name": "dev-srv-audit-route",
              "uris": ["/api/audit", "/api/audit/*"],
              "upstream": {
                "type": "roundrobin",
                "nodes": {
                    "{{ .Values.global.devEnv.ip }}:59140": 1
                }
              },
              "plugins": {
                "opentelemetry": {
                  "sampler": {
                    "name": "always_on"
                  }
                },
                "proxy-rewrite": {
                    "regex_uri": [
                      "/api/audit/(.*)",
                      "/api/$1"
                    ]
                },
                "cors": {
                    "origin": "*"
                },
                "openid-connect": {
                  "client_id": "esthesis",
                  "client_secret": "",
                  "discovery": "http://esthesis-keycloak/realms/esthesis/.well-known/openid-configuration",
                  "scope": "openid profile",
                  "use_jwks": true,
                  "bearer_only": true,
                  "realm": "esthesis",
                  "redirect_uri": "/api/audit/callback",
                  "set_access_token_header": false,
                  "set_id_token_header": false,
                  "set_userinfo_header": false
                }
              }
              }'
  {{ end }}
