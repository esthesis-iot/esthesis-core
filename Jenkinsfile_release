pipeline{
    agent {
        docker {
            image 'eddevopsd2/ubuntu-dind:dind-mvn3.6.3-jdk15-npm6.14.13-buildx'
            args '--privileged -v /root/.m2/Esthesis:/root/.m2'
        }
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    stages{
        stage ("Prompt for Input") {
            steps {
                script {
                    env.RELEASE_VERSION = input message: 'Release version:',
                                     parameters: [string(defaultValue: '',
                                                  description: 'Attention: To avoid Git conflicts, please do not build esthesis-ui/device release jobs before this one finishes.',
                                                  name: 'Release version')]
                    env.NEXT_DEV_VERSION = input message: 'Snapshot version:',
                                     parameters: [string(defaultValue: '',
                                                  description: '',
                                                  name: 'Next development version')]
                }
            }
        }
        stage ("Clone projects") {
            steps{
                withCredentials([usernamePassword(credentialsId: 'Jenkins Github token',
                usernameVariable: 'Username',
                passwordVariable: 'Password')]){
                    sh '''
                        git config --global user.email "devops-d2@eurodyn.com"
                        git config --global user.name "$Username"
                        git clone https://$Username:$Password@github.com/esthesis-iot/esthesis-server.git
                        git clone https://$Username:$Password@github.com/esthesis-iot/esthesis-setup.git
                    '''
                }
            }
        }
        stage ("Push changes for release version"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'Jenkins Github token',
                usernameVariable: 'Username',
                passwordVariable: 'Password')]){
                    sh '''
                        git remote set-url origin https://$Username:$Password@github.com/esthesis-iot/esthesis-server.git
                        cd esthesis-server
                        mvn versions:set -DnewVersion=$RELEASE_VERSION
                        mvn versions:commit
                        mvn clean install
                        git commit -a -m "release: prepare release $RELEASE_VERSION"
                        git tag -a $RELEASE_VERSION -m "$RELEASE_VERSION"
                        git push https://$Username:$Password@github.com/esthesis-iot/esthesis-server HEAD:master --tags
                        cd ..
                    '''
                }                
            }
        }
        stage ("Build & Push docker container for esthesis-server"){
            environment {
		            DOCKERHUB_CREDENTIALS=credentials('devops_d2_dockerhub')
	                }
            steps{
                withCredentials([usernamePassword(credentialsId: 'Jenkins Github token',
                usernameVariable: 'Username',
                passwordVariable: 'Password')]){
                    sh '''
                        echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                        cd esthesis-setup
                        sed -i "s|esthesisiot/esthesis-server:.*$|esthesisiot/esthesis-server:$RELEASE_VERSION|" docker/docker-compose.yml
                        docker compose -f docker/docker-compose.yml build esthesis-server
                        docker push esthesisiot/esthesis-server:$RELEASE_VERSION
                        cd ..
                    '''
                }                
            }   
        }
        stage ("Push changes for next development version"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'Jenkins Github token',
                usernameVariable: 'Username',
                passwordVariable: 'Password')]){
                    sh '''
                        cd esthesis-server
                        mvn versions:set -DnewVersion=$NEXT_DEV_VERSION
                        mvn versions:commit
                        git commit -a -m "release: prepare for next development iteration"
                        git push https://$Username:$Password@github.com/esthesis-iot/esthesis-server HEAD:master
                        cd ..

                        git remote set-url origin https://$Username:$Password@github.com/esthesis-iot/esthesis-setup.git
                        cd esthesis-setup/docker
                        sed -i "s|esthesisiot/esthesis-server:.*$|esthesisiot/esthesis-server:$NEXT_DEV_VERSION|" docker-compose.yml
                        git commit -a -m "release: prepare for next development iteration"
                        git push https://$Username:$Password@github.com/esthesis-iot/esthesis-setup HEAD:master
                    '''
                }                
            }             
        }  
    }
}
